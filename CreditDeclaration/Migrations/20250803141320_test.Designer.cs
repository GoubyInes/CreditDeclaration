// <auto-generated />
using System;
using CreditDeclaration.DBContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CreditDeclaration.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250803141320_test")]
    partial class test
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CreditDeclaration.Modals.PersonnePhysique", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ActeNaissance")
                        .HasColumnType("char(1)")
                        .HasColumnName("acte_naissance");

                    b.Property<string>("Adresse")
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("adresse");

                    b.Property<string>("AdresseCommune")
                        .IsRequired()
                        .HasColumnType("nvarchar(3)")
                        .HasColumnName("adresse_commune");

                    b.Property<string>("AdresseWilaya")
                        .HasColumnType("nvarchar(3)")
                        .HasColumnName("adresse_wilaya");

                    b.Property<string>("AdresseWilayaDataCode")
                        .HasColumnType("nvarchar(3)");

                    b.Property<string>("CleIntermediaire")
                        .HasColumnType("nvarchar(26)")
                        .HasColumnName("cle_intermediaire");

                    b.Property<string>("CleOnomastique")
                        .HasColumnType("nvarchar(26)")
                        .HasColumnName("cle_onomastique");

                    b.Property<string>("ClientRadical")
                        .HasColumnType("nvarchar(6)")
                        .HasColumnName("client_radical");

                    b.Property<string>("CodeAgence")
                        .HasColumnType("nvarchar(3)")
                        .HasColumnName("code_agence");

                    b.Property<string>("CommuneNaissance")
                        .IsRequired()
                        .HasColumnType("nvarchar(3)")
                        .HasColumnName("commune_naissance");

                    b.Property<DateTime?>("DateExpiration")
                        .HasColumnType("date")
                        .HasColumnName("date_expiration");

                    b.Property<DateTime?>("DateNaissance")
                        .HasColumnType("date")
                        .HasColumnName("date_naissance");

                    b.Property<string>("EntiteEmettrice")
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("entite_emettrice");

                    b.Property<string>("EtatCivil")
                        .HasColumnType("nvarchar(3)")
                        .HasColumnName("etat_civil");

                    b.Property<string>("EtatCivilDataCode")
                        .HasColumnType("nvarchar(3)");

                    b.Property<bool?>("Nationalite")
                        .HasColumnType("bit")
                        .HasColumnName("nationalite");

                    b.Property<string>("Nif")
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("nif");

                    b.Property<string>("Nom")
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("nom");

                    b.Property<string>("NomConjoint")
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("nom_conjoint");

                    b.Property<string>("NomMere")
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("nom_mere");

                    b.Property<decimal?>("NumActeNaissance")
                        .HasColumnType("decimal(5,0)")
                        .HasColumnName("num_acte_naissance");

                    b.Property<string>("NumDoc")
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("num_doc");

                    b.Property<string>("PaysEmission")
                        .HasColumnType("nvarchar(3)")
                        .HasColumnName("pays_emission");

                    b.Property<string>("PaysEmissionDataCode")
                        .HasColumnType("nvarchar(3)");

                    b.Property<string>("PaysNaissance")
                        .HasColumnType("nvarchar(3)")
                        .HasColumnName("pays_naissance");

                    b.Property<string>("PaysNaissanceDataCode")
                        .HasColumnType("nvarchar(3)");

                    b.Property<string>("Prenom")
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("prenom");

                    b.Property<string>("PrenomMere")
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("prenom_mere");

                    b.Property<string>("PrenomPere")
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("prenom_pere");

                    b.Property<bool?>("Presume")
                        .HasColumnType("bit")
                        .HasColumnName("presume");

                    b.Property<string>("Profession")
                        .HasColumnType("nvarchar(3)")
                        .HasColumnName("profession");

                    b.Property<string>("ProfessionDataCode")
                        .HasColumnType("nvarchar(3)");

                    b.Property<decimal?>("Revenu")
                        .HasColumnType("decimal(18,0)")
                        .HasColumnName("revenu");

                    b.Property<string>("Sexe")
                        .HasColumnType("char(1)")
                        .HasColumnName("sexe");

                    b.Property<string>("TypeDoc")
                        .HasColumnType("nvarchar(3)")
                        .HasColumnName("type_doc");

                    b.Property<string>("TypeDocDataCode")
                        .HasColumnType("nvarchar(3)");

                    b.Property<string>("WilayaNaissance")
                        .HasColumnType("nvarchar(3)")
                        .HasColumnName("wilaya_naissance");

                    b.Property<string>("WilayaNaissanceDataCode")
                        .HasColumnType("nvarchar(3)");

                    b.HasKey("Id");

                    b.HasIndex("AdresseWilayaDataCode");

                    b.HasIndex("EtatCivilDataCode");

                    b.HasIndex("PaysEmissionDataCode");

                    b.HasIndex("PaysNaissanceDataCode");

                    b.HasIndex("ProfessionDataCode");

                    b.HasIndex("TypeDocDataCode");

                    b.HasIndex("WilayaNaissanceDataCode");

                    b.ToTable("Personne_Physique", "dbo");
                });

            modelBuilder.Entity("CreditDeclaration.Models.Activite", b =>
                {
                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(2)")
                        .HasColumnName("code");

                    b.Property<string>("Descriptif")
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("descriptif");

                    b.Property<string>("Domaine")
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("domaine");

                    b.HasKey("Code");

                    b.ToTable("Activite", "dbo");
                });

            modelBuilder.Entity("CreditDeclaration.Models.Banque", b =>
                {
                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("code");

                    b.Property<string>("Descriptif")
                        .HasColumnType("nvarchar")
                        .HasColumnName("descriptif");

                    b.Property<string>("Domaine")
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("domaine");

                    b.HasKey("Code");

                    b.ToTable("Banque", "dbo");
                });

            modelBuilder.Entity("CreditDeclaration.Models.CaracteristiqueCredit", b =>
                {
                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(3)")
                        .HasColumnName("code");

                    b.Property<string>("Descriptif")
                        .HasColumnType("nvarchar")
                        .HasColumnName("descriptif");

                    b.Property<string>("Domaine")
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("domaine");

                    b.HasKey("Code");

                    b.ToTable("Caracteristique_Credit", "dbo");
                });

            modelBuilder.Entity("CreditDeclaration.Models.ClasseRetard", b =>
                {
                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(3)")
                        .HasColumnName("code");

                    b.Property<string>("Descriptif")
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("descriptif");

                    b.Property<string>("Domaine")
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("domaine");

                    b.HasKey("Code");

                    b.ToTable("Classe_Retard_Credit", "dbo");
                });

            modelBuilder.Entity("CreditDeclaration.Models.Commune", b =>
                {
                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(3)")
                        .HasColumnName("code");

                    b.Property<string>("Descriptif")
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("descriptif");

                    b.Property<string>("Domaine")
                        .IsRequired()
                        .HasColumnType("nvarchar(3)")
                        .HasColumnName("domaine");

                    b.HasKey("Code");

                    b.ToTable("Commune", "dbo");
                });

            modelBuilder.Entity("CreditDeclaration.Models.DureeCredit", b =>
                {
                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("code");

                    b.Property<string>("Descriptif")
                        .HasColumnType("nvarchar")
                        .HasColumnName("descriptif");

                    b.Property<string>("Domaine")
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("domaine");

                    b.HasKey("Code");

                    b.ToTable("Duree_Credit", "dbo");
                });

            modelBuilder.Entity("CreditDeclaration.Models.EntitePublique", b =>
                {
                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(3)")
                        .HasColumnName("code");

                    b.Property<string>("Descriptif")
                        .HasColumnType("nvarchar")
                        .HasColumnName("descriptif");

                    b.Property<string>("Domaine")
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("domaine");

                    b.HasKey("Code");

                    b.ToTable("Entite_Publique", "dbo");
                });

            modelBuilder.Entity("CreditDeclaration.Models.EntrepreneurIndividuel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ActeNaissance")
                        .HasColumnType("char(1)")
                        .HasColumnName("acte_naissance");

                    b.Property<string>("Adresse")
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("adresse");

                    b.Property<string>("AdresseActivite")
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("adresse_activite");

                    b.Property<string>("AdresseActiviteCommune")
                        .IsRequired()
                        .HasColumnType("nvarchar(3)")
                        .HasColumnName("adresse_activite_commune");

                    b.Property<string>("AdresseActiviteWilaya")
                        .HasColumnType("nvarchar(3)")
                        .HasColumnName("adresse_activite_wilaya");

                    b.Property<string>("AdresseActiviteWilayaDataCode")
                        .HasColumnType("nvarchar(3)");

                    b.Property<string>("AdresseCommune")
                        .IsRequired()
                        .HasColumnType("nvarchar(3)")
                        .HasColumnName("adresse_commune");

                    b.Property<string>("AdresseWilaya")
                        .HasColumnType("nvarchar(3)")
                        .HasColumnName("adresse_wilaya");

                    b.Property<string>("AdresseWilayaDataCode")
                        .HasColumnType("nvarchar(3)");

                    b.Property<string>("CleIntermediaire")
                        .HasColumnType("varchar(26)")
                        .HasColumnName("cle_intermediaire");

                    b.Property<string>("CleOnomastique")
                        .HasColumnType("varchar(26)")
                        .HasColumnName("cle_onomastique");

                    b.Property<string>("ClientRadical")
                        .HasColumnType("nvarchar(6)")
                        .HasColumnName("client_radical");

                    b.Property<string>("CodeActivite")
                        .HasColumnType("nvarchar(2)")
                        .HasColumnName("code_activite");

                    b.Property<string>("CodeActiviteDataCode")
                        .HasColumnType("nvarchar(2)");

                    b.Property<string>("CodeAgence")
                        .HasColumnType("nvarchar(3)")
                        .HasColumnName("code_agence");

                    b.Property<string>("CommuneNaissance")
                        .IsRequired()
                        .HasColumnType("nvarchar(3)")
                        .HasColumnName("commune_naissance");

                    b.Property<DateTime?>("DateExpiration")
                        .HasColumnType("date")
                        .HasColumnName("date_expiration");

                    b.Property<DateTime?>("DateNaissance")
                        .HasColumnType("date")
                        .HasColumnName("date_naissance");

                    b.Property<decimal?>("Effictif")
                        .HasColumnType("decimal(18,0)")
                        .HasColumnName("effictif");

                    b.Property<string>("EntiteEmettrice")
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("entite_emettrice");

                    b.Property<string>("EtatCivil")
                        .HasColumnType("nvarchar(3)")
                        .HasColumnName("etat_civil");

                    b.Property<string>("EtatCivilDataCode")
                        .HasColumnType("nvarchar(3)");

                    b.Property<decimal?>("FondPropre")
                        .HasColumnType("decimal(18,0)")
                        .HasColumnName("fond_propre");

                    b.Property<bool?>("Nationalite")
                        .HasColumnType("bit")
                        .HasColumnName("nationalite");

                    b.Property<string>("Nif")
                        .HasColumnType("varchar(20)")
                        .HasColumnName("nif");

                    b.Property<string>("Nom")
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("nom");

                    b.Property<string>("NomConjoint")
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("nom_conjoint");

                    b.Property<string>("NomMere")
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("nom_mere");

                    b.Property<decimal?>("NumActeNaissance")
                        .HasColumnType("decimal(5,0)")
                        .HasColumnName("num_acte_naissance");

                    b.Property<string>("NumDoc")
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("num_doc");

                    b.Property<string>("PaysEmission")
                        .HasColumnType("char(3)")
                        .HasColumnName("pays_emission");

                    b.Property<string>("PaysEmissionDataCode")
                        .HasColumnType("nvarchar(3)");

                    b.Property<string>("PaysNaissance")
                        .HasColumnType("nvarchar(3)")
                        .HasColumnName("pays_naissance");

                    b.Property<string>("PaysNaissanceDataCode")
                        .HasColumnType("nvarchar(3)");

                    b.Property<string>("Prenom")
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("prenom");

                    b.Property<string>("PrenomMere")
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("prenom_mere");

                    b.Property<string>("PrenomPere")
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("prenom_pere");

                    b.Property<bool?>("Presume")
                        .HasColumnType("bit")
                        .HasColumnName("presume");

                    b.Property<string>("Profession")
                        .HasColumnType("nvarchar(3)")
                        .HasColumnName("profession");

                    b.Property<string>("ProfessionDataCode")
                        .HasColumnType("nvarchar(3)");

                    b.Property<decimal?>("Recette")
                        .HasColumnType("decimal(18,0)")
                        .HasColumnName("recette");

                    b.Property<decimal?>("Revenu")
                        .HasColumnType("decimal(18,0)")
                        .HasColumnName("revenu");

                    b.Property<string>("Sexe")
                        .HasColumnType("char(1)")
                        .HasColumnName("sexe");

                    b.Property<decimal?>("TotalBilan")
                        .HasColumnType("decimal(18,0)")
                        .HasColumnName("total_bilan");

                    b.Property<string>("TypeDoc")
                        .HasColumnType("nvarchar(3)")
                        .HasColumnName("type_doc");

                    b.Property<string>("TypeDocDataCode")
                        .HasColumnType("nvarchar(3)");

                    b.Property<string>("WilayaNaissance")
                        .HasColumnType("nvarchar(3)")
                        .HasColumnName("wilaya_naissance");

                    b.Property<string>("WilayaNaissanceDataCode")
                        .HasColumnType("nvarchar(3)");

                    b.HasKey("Id");

                    b.HasIndex("AdresseActiviteWilayaDataCode");

                    b.HasIndex("AdresseWilayaDataCode");

                    b.HasIndex("CodeActiviteDataCode");

                    b.HasIndex("EtatCivilDataCode");

                    b.HasIndex("PaysEmissionDataCode");

                    b.HasIndex("PaysNaissanceDataCode");

                    b.HasIndex("ProfessionDataCode");

                    b.HasIndex("TypeDocDataCode");

                    b.HasIndex("WilayaNaissanceDataCode");

                    b.ToTable("Entrepreneur_Individuel", "dbo");
                });

            modelBuilder.Entity("CreditDeclaration.Models.EtatCivil", b =>
                {
                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(3)")
                        .HasColumnName("code");

                    b.Property<string>("Descriptif")
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("descriptif");

                    b.Property<string>("Domaine")
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("domaine");

                    b.HasKey("Code");

                    b.ToTable("Etat_Civil", "dbo");
                });

            modelBuilder.Entity("CreditDeclaration.Models.FonctionDirigeant", b =>
                {
                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("code");

                    b.Property<string>("Descriptif")
                        .HasColumnType("nvarchar")
                        .HasColumnName("descriptif");

                    b.Property<string>("Domaine")
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("domaine");

                    b.HasKey("Code");

                    b.ToTable("Fonction_Dirigeant", "dbo");
                });

            modelBuilder.Entity("CreditDeclaration.Models.FormeJuridique", b =>
                {
                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(3)")
                        .HasColumnName("code");

                    b.Property<string>("Descriptif")
                        .HasColumnType("nvarchar")
                        .HasColumnName("descriptif");

                    b.Property<string>("Domaine")
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("domaine");

                    b.HasKey("Code");

                    b.ToTable("Forme_Juridique", "dbo");
                });

            modelBuilder.Entity("CreditDeclaration.Models.Monnaie", b =>
                {
                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("code_monnaie");

                    b.Property<string>("Devise")
                        .HasColumnType("varchar(50)")
                        .HasColumnName("devise");

                    b.Property<string>("Entite")
                        .HasColumnType("varchar(50)")
                        .HasColumnName("entite");

                    b.HasKey("Code");

                    b.ToTable("Monnaie", "dbo");
                });

            modelBuilder.Entity("CreditDeclaration.Models.NiveauResponsabilite", b =>
                {
                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(3)")
                        .HasColumnName("code");

                    b.Property<string>("Descriptif")
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("descriptif");

                    b.Property<string>("Domaine")
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("domaine");

                    b.HasKey("Code");

                    b.ToTable("Niveau_Responsabilite", "dbo");
                });

            modelBuilder.Entity("CreditDeclaration.Models.Pays", b =>
                {
                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(3)")
                        .HasColumnName("code");

                    b.Property<string>("Descriptif")
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("descriptif");

                    b.Property<string>("Domaine")
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("domaine");

                    b.HasKey("Code");

                    b.ToTable("Pays", "dbo");
                });

            modelBuilder.Entity("CreditDeclaration.Models.PersonneMorale", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AdresseActivite")
                        .HasColumnType("varchar(100)")
                        .HasColumnName("adresse_activite");

                    b.Property<string>("AdresseSiege")
                        .HasColumnType("varchar(100)")
                        .HasColumnName("adresse_siege");

                    b.Property<decimal?>("CapitalEmis")
                        .HasColumnType("decimal(18,0)")
                        .HasColumnName("capital_emis");

                    b.Property<decimal?>("Capitaux")
                        .HasColumnType("decimal(18,0)")
                        .HasColumnName("capitaux");

                    b.Property<decimal?>("ChiffreAffaire")
                        .HasColumnType("decimal(18,0)")
                        .HasColumnName("chiffre_affaire");

                    b.Property<string>("CleIntermediaire")
                        .HasColumnType("varchar(26)")
                        .HasColumnName("cle_intermediaire");

                    b.Property<string>("CleOnomastique")
                        .HasColumnType("varchar(26)")
                        .HasColumnName("cle_onomastique");

                    b.Property<int?>("ClientRadicale")
                        .HasColumnType("int")
                        .HasColumnName("client_radicale");

                    b.Property<int?>("CodeActivitePrincipale")
                        .HasColumnType("int")
                        .HasColumnName("code_activite_principale");

                    b.Property<int?>("CodeAgence")
                        .HasColumnType("int")
                        .HasColumnName("code_agence");

                    b.Property<int?>("CommuneActivite")
                        .HasColumnType("int")
                        .HasColumnName("commune_activite");

                    b.Property<int?>("CommuneSiege")
                        .HasColumnType("int")
                        .HasColumnName("commune_siege");

                    b.Property<decimal?>("DateBilan")
                        .HasColumnType("decimal(18,0)")
                        .HasColumnName("date_bilan");

                    b.Property<DateTime?>("DateCreation")
                        .HasColumnType("date")
                        .HasColumnName("date_creation");

                    b.Property<DateTime?>("DateExpiration")
                        .HasColumnType("date")
                        .HasColumnName("date_expiration");

                    b.Property<decimal?>("Effectif")
                        .HasColumnType("decimal(18,0)")
                        .HasColumnName("effectif");

                    b.Property<decimal?>("Emprunt")
                        .HasColumnType("decimal(18,0)")
                        .HasColumnName("emprunt");

                    b.Property<string>("EniteEmettrice")
                        .HasColumnType("varchar(20)")
                        .HasColumnName("enite_emettrice");

                    b.Property<int?>("EntitePublique")
                        .HasColumnType("int")
                        .HasColumnName("entite_publique");

                    b.Property<decimal?>("ExcedentBrut")
                        .HasColumnType("decimal(18,0)")
                        .HasColumnName("excedent_brut");

                    b.Property<int?>("FormeJuridique")
                        .HasColumnType("int")
                        .HasColumnName("forme_juridique");

                    b.Property<string>("Nif")
                        .HasColumnType("varchar(20)")
                        .HasColumnName("nif");

                    b.Property<string>("NumDoc")
                        .HasColumnType("varchar(20)")
                        .HasColumnName("num_doc");

                    b.Property<int?>("PaysEmission")
                        .HasColumnType("int")
                        .HasColumnName("pays_emission");

                    b.Property<decimal?>("RaportNouveau")
                        .HasColumnType("decimal(18,0)")
                        .HasColumnName("raport_nouveau");

                    b.Property<decimal?>("Reserve")
                        .HasColumnType("decimal(18,0)")
                        .HasColumnName("reserve");

                    b.Property<decimal?>("ResultatFinancier")
                        .HasColumnType("decimal(18,0)")
                        .HasColumnName("resultat_financier");

                    b.Property<decimal?>("ResultatNet")
                        .HasColumnType("decimal(18,0)")
                        .HasColumnName("resultat_net");

                    b.Property<string>("Sigle")
                        .HasColumnType("varchar(20)")
                        .HasColumnName("sigle");

                    b.Property<decimal?>("TotalActif")
                        .HasColumnType("decimal(18,0)")
                        .HasColumnName("total_actif");

                    b.Property<decimal?>("TotalBilan")
                        .HasColumnType("decimal(18,0)")
                        .HasColumnName("total_bilan");

                    b.Property<int?>("TypeDoc")
                        .HasColumnType("int")
                        .HasColumnName("type_doc");

                    b.Property<decimal?>("ValeurAjoute")
                        .HasColumnType("decimal(18,0)")
                        .HasColumnName("valeur_ajoute");

                    b.Property<int?>("WilayaActivite")
                        .HasColumnType("int")
                        .HasColumnName("wilaya_activite");

                    b.Property<int?>("WilayaSiege")
                        .HasColumnType("int")
                        .HasColumnName("wilaya_siege");

                    b.HasKey("Id");

                    b.ToTable("Personne_Morale", "dbo");
                });

            modelBuilder.Entity("CreditDeclaration.Models.Profession", b =>
                {
                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(3)")
                        .HasColumnName("code");

                    b.Property<string>("Descriptif")
                        .HasColumnType("text")
                        .HasColumnName("descriptif");

                    b.Property<string>("Domaine")
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("domaine");

                    b.HasKey("Code");

                    b.ToTable("Profession", "dbo");
                });

            modelBuilder.Entity("CreditDeclaration.Models.SituationCredit", b =>
                {
                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(3)")
                        .HasColumnName("code");

                    b.Property<string>("Descriptif")
                        .HasColumnType("nvarchar")
                        .HasColumnName("descriptif");

                    b.Property<string>("Domaine")
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("domaine");

                    b.HasKey("Code");

                    b.ToTable("Situation_Credit", "dbo");
                });

            modelBuilder.Entity("CreditDeclaration.Models.SourceInformationCredit", b =>
                {
                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(3)")
                        .HasColumnName("code");

                    b.Property<string>("Descriptif")
                        .HasColumnType("nvarchar")
                        .HasColumnName("descriptif");

                    b.Property<string>("Domaine")
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("domaine");

                    b.HasKey("Code");

                    b.ToTable("Source_Information_Credit", "dbo");
                });

            modelBuilder.Entity("CreditDeclaration.Models.TypeCredit", b =>
                {
                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(3)")
                        .HasColumnName("code");

                    b.Property<string>("Descriptif")
                        .HasColumnType("nvarchar")
                        .HasColumnName("descriptif");

                    b.Property<string>("Domaine")
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("domaine");

                    b.HasKey("Code");

                    b.ToTable("Type_Credit", "dbo");
                });

            modelBuilder.Entity("CreditDeclaration.Models.TypeDocument", b =>
                {
                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(3)")
                        .HasColumnName("code");

                    b.Property<string>("Descriptif")
                        .HasColumnType("nvarchar")
                        .HasColumnName("descriptif");

                    b.Property<string>("Domaine")
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("domaine");

                    b.HasKey("Code");

                    b.ToTable("Type_document", "dbo");
                });

            modelBuilder.Entity("CreditDeclaration.Models.TypeGarantie", b =>
                {
                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(3)")
                        .HasColumnName("code");

                    b.Property<string>("Descriptif")
                        .HasColumnType("nvarchar")
                        .HasColumnName("descriptif");

                    b.Property<string>("Domaine")
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("domaine");

                    b.HasKey("Code");

                    b.ToTable("Type_Garantie", "dbo");
                });

            modelBuilder.Entity("CreditDeclaration.Models.TypePersonne", b =>
                {
                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(3)")
                        .HasColumnName("code");

                    b.Property<string>("Descriptif")
                        .HasColumnType("nvarchar")
                        .HasColumnName("descriptif");

                    b.Property<string>("Domaine")
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("domaine");

                    b.HasKey("Code");

                    b.ToTable("Type_Personne", "dbo");
                });

            modelBuilder.Entity("CreditDeclaration.Models.Wilaya", b =>
                {
                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(3)")
                        .HasColumnName("code");

                    b.Property<string>("Descriptif")
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("descriptif");

                    b.Property<string>("Domaine")
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("domaine");

                    b.HasKey("Code");

                    b.ToTable("Wilaya", "dbo");
                });

            modelBuilder.Entity("CreditDeclaration.Modals.PersonnePhysique", b =>
                {
                    b.HasOne("CreditDeclaration.Models.Wilaya", "AdresseWilayaData")
                        .WithMany()
                        .HasForeignKey("AdresseWilayaDataCode");

                    b.HasOne("CreditDeclaration.Models.EtatCivil", "EtatCivilData")
                        .WithMany()
                        .HasForeignKey("EtatCivilDataCode");

                    b.HasOne("CreditDeclaration.Models.Pays", "PaysEmissionData")
                        .WithMany()
                        .HasForeignKey("PaysEmissionDataCode");

                    b.HasOne("CreditDeclaration.Models.Pays", "PaysNaissanceData")
                        .WithMany()
                        .HasForeignKey("PaysNaissanceDataCode");

                    b.HasOne("CreditDeclaration.Models.Profession", "ProfessionData")
                        .WithMany()
                        .HasForeignKey("ProfessionDataCode");

                    b.HasOne("CreditDeclaration.Models.TypeDocument", "TypeDocData")
                        .WithMany()
                        .HasForeignKey("TypeDocDataCode");

                    b.HasOne("CreditDeclaration.Models.Wilaya", "WilayaNaissanceData")
                        .WithMany()
                        .HasForeignKey("WilayaNaissanceDataCode");

                    b.Navigation("AdresseWilayaData");

                    b.Navigation("EtatCivilData");

                    b.Navigation("PaysEmissionData");

                    b.Navigation("PaysNaissanceData");

                    b.Navigation("ProfessionData");

                    b.Navigation("TypeDocData");

                    b.Navigation("WilayaNaissanceData");
                });

            modelBuilder.Entity("CreditDeclaration.Models.EntrepreneurIndividuel", b =>
                {
                    b.HasOne("CreditDeclaration.Models.Wilaya", "AdresseActiviteWilayaData")
                        .WithMany()
                        .HasForeignKey("AdresseActiviteWilayaDataCode");

                    b.HasOne("CreditDeclaration.Models.Wilaya", "AdresseWilayaData")
                        .WithMany()
                        .HasForeignKey("AdresseWilayaDataCode");

                    b.HasOne("CreditDeclaration.Models.Activite", "CodeActiviteData")
                        .WithMany()
                        .HasForeignKey("CodeActiviteDataCode");

                    b.HasOne("CreditDeclaration.Models.EtatCivil", "EtatCivilData")
                        .WithMany()
                        .HasForeignKey("EtatCivilDataCode");

                    b.HasOne("CreditDeclaration.Models.Pays", "PaysEmissionData")
                        .WithMany()
                        .HasForeignKey("PaysEmissionDataCode");

                    b.HasOne("CreditDeclaration.Models.Pays", "PaysNaissanceData")
                        .WithMany()
                        .HasForeignKey("PaysNaissanceDataCode");

                    b.HasOne("CreditDeclaration.Models.Profession", "ProfessionData")
                        .WithMany()
                        .HasForeignKey("ProfessionDataCode");

                    b.HasOne("CreditDeclaration.Models.TypeDocument", "TypeDocData")
                        .WithMany()
                        .HasForeignKey("TypeDocDataCode");

                    b.HasOne("CreditDeclaration.Models.Wilaya", "WilayaNaissanceData")
                        .WithMany()
                        .HasForeignKey("WilayaNaissanceDataCode");

                    b.Navigation("AdresseActiviteWilayaData");

                    b.Navigation("AdresseWilayaData");

                    b.Navigation("CodeActiviteData");

                    b.Navigation("EtatCivilData");

                    b.Navigation("PaysEmissionData");

                    b.Navigation("PaysNaissanceData");

                    b.Navigation("ProfessionData");

                    b.Navigation("TypeDocData");

                    b.Navigation("WilayaNaissanceData");
                });
#pragma warning restore 612, 618
        }
    }
}
