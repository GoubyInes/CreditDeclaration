{"timestamp":"2025-08-07T13:37:41.926386","level":"info","event":"DAG bundles loaded: dags-folder","logger":"airflow.dag_processing.bundles.manager.DagBundlesManager"}
{"timestamp":"2025-08-07T13:37:41.926932","level":"info","event":"Filling up the DagBag from /opt/airflow/dags/transformData.py","logger":"airflow.models.dagbag.DagBag"}
{"timestamp":"2025-08-07T13:37:42.287986","level":"info","event":"Secrets backends loaded for worker","count":1,"backend_classes":["EnvironmentVariablesBackend"],"logger":"supervisor"}
{"timestamp":"2025-08-07T13:37:42.418784","level":"info","event":"Connection Retrieved 'sqlserver'","logger":"airflow.hooks.base"}
{"timestamp":"2025-08-07T13:37:42.442586","level":"warning","event":"/home/airflow/.local/lib/python3.12/site-packages/airflow/providers/common/sql/hooks/sql.py:462: UserWarning: pandas only supports SQLAlchemy connectable (engine/connection) or database string URI or sqlite3 DBAPI2 connection. Other DBAPI2 objects are not tested. Please consider using SQLAlchemy.\n  return psql.read_sql(sql, con=conn, params=parameters, **kwargs)\n","logger":"py.warnings"}
{"timestamp":"2025-08-07T13:37:42.449078","level":"info","event":"Secrets backends loaded for worker","count":1,"backend_classes":["EnvironmentVariablesBackend"],"logger":"supervisor"}
{"timestamp":"2025-08-07T13:37:42.457608","level":"info","event":"Connection Retrieved 'sqlserver'","logger":"airflow.hooks.base"}
{"timestamp":"2025-08-07T13:37:42.479393","level":"warning","event":"/home/airflow/.local/lib/python3.12/site-packages/airflow/providers/common/sql/hooks/sql.py:462: UserWarning: pandas only supports SQLAlchemy connectable (engine/connection) or database string URI or sqlite3 DBAPI2 connection. Other DBAPI2 objects are not tested. Please consider using SQLAlchemy.\n  return psql.read_sql(sql, con=conn, params=parameters, **kwargs)\n","logger":"py.warnings"}
{"timestamp":"2025-08-07T13:37:42.485094","level":"info","event":"Secrets backends loaded for worker","count":1,"backend_classes":["EnvironmentVariablesBackend"],"logger":"supervisor"}
{"timestamp":"2025-08-07T13:37:42.493135","level":"info","event":"Connection Retrieved 'sqlserver'","logger":"airflow.hooks.base"}
{"timestamp":"2025-08-07T13:37:42.513470","level":"warning","event":"/home/airflow/.local/lib/python3.12/site-packages/airflow/providers/common/sql/hooks/sql.py:462: UserWarning: pandas only supports SQLAlchemy connectable (engine/connection) or database string URI or sqlite3 DBAPI2 connection. Other DBAPI2 objects are not tested. Please consider using SQLAlchemy.\n  return psql.read_sql(sql, con=conn, params=parameters, **kwargs)\n","logger":"py.warnings"}
{"timestamp":"2025-08-07T13:37:42.523067","level":"warning","event":"/opt/airflow/dags/transformData.py:41: FutureWarning: DataFrame.applymap has been deprecated. Use DataFrame.map instead.\n  physic_person_list = physic_person_list.applymap(lambda x: x.strip() if isinstance(x, str) else x)\n","logger":"py.warnings"}
{"timestamp":"2025-08-07T13:37:42.526238","level":"info","event":"Secrets backends loaded for worker","count":1,"backend_classes":["EnvironmentVariablesBackend"],"logger":"supervisor"}
{"timestamp":"2025-08-07T13:37:42.533757","level":"info","event":"Connection Retrieved 'sqlserver'","logger":"airflow.hooks.base"}
{"timestamp":"2025-08-07T13:37:42.553579","level":"warning","event":"/home/airflow/.local/lib/python3.12/site-packages/airflow/providers/common/sql/hooks/sql.py:462: UserWarning: pandas only supports SQLAlchemy connectable (engine/connection) or database string URI or sqlite3 DBAPI2 connection. Other DBAPI2 objects are not tested. Please consider using SQLAlchemy.\n  return psql.read_sql(sql, con=conn, params=parameters, **kwargs)\n","logger":"py.warnings"}
{"timestamp":"2025-08-07T13:37:42.559370","level":"error","event":"Task failed with exception","logger":"task","error_detail":[{"exc_type":"DatabaseError","exc_value":"Execution failed on sql 'SELECT * FROM Personne_Morale where client_radical= %s': (207, b\"Invalid column name 'client_radical'.DB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\n\")","exc_notes":[],"syntax_error":null,"is_cause":false,"frames":[{"filename":"/home/airflow/.local/lib/python3.12/site-packages/airflow/sdk/execution_time/task_runner.py","lineno":825,"name":"run"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/airflow/sdk/execution_time/task_runner.py","lineno":1088,"name":"_execute_task"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/airflow/sdk/bases/operator.py","lineno":408,"name":"wrapper"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/airflow/providers/standard/operators/python.py","lineno":212,"name":"execute"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/airflow/providers/standard/operators/python.py","lineno":235,"name":"execute_callable"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/airflow/sdk/execution_time/callback_runner.py","lineno":81,"name":"run"},{"filename":"/opt/airflow/dags/transformData.py","lineno":200,"name":"create_xml"},{"filename":"/opt/airflow/dags/transformData.py","lineno":278,"name":"fetch_personne_morale_associe"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/deprecated/classic.py","lineno":199,"name":"wrapper_function"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/airflow/providers/common/sql/hooks/sql.py","lineno":402,"name":"get_pandas_df"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/airflow/providers/common/sql/hooks/sql.py","lineno":462,"name":"_get_pandas_df"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/pandas/io/sql.py","lineno":654,"name":"read_sql"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/pandas/io/sql.py","lineno":2326,"name":"read_query"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/pandas/io/sql.py","lineno":2274,"name":"execute"}]},{"exc_type":"ProgrammingError","exc_value":"(207, b\"Invalid column name 'client_radical'.DB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\n\")","exc_notes":[],"syntax_error":null,"is_cause":true,"frames":[{"filename":"/home/airflow/.local/lib/python3.12/site-packages/pandas/io/sql.py","lineno":2262,"name":"execute"},{"filename":"/opt/airflow/src/pymssql/_pymssql.pyx","lineno":462,"name":"pymssql._pymssql.Cursor.execute"}]},{"exc_type":"MSSQLDatabaseException","exc_value":"(207, b\"Invalid column name 'client_radical'.DB-Lib error message 20018, severity 16:\\nGeneral SQL Server error: Check messages from the SQL Server\\n\")","exc_notes":[],"syntax_error":null,"is_cause":false,"frames":[{"filename":"/opt/airflow/src/pymssql/_pymssql.pyx","lineno":447,"name":"pymssql._pymssql.Cursor.execute"},{"filename":"/opt/airflow/src/pymssql/_mssql.pyx","lineno":1125,"name":"pymssql._mssql.MSSQLConnection.execute_query"},{"filename":"/opt/airflow/src/pymssql/_mssql.pyx","lineno":1156,"name":"pymssql._mssql.MSSQLConnection.execute_query"},{"filename":"/opt/airflow/src/pymssql/_mssql.pyx","lineno":1289,"name":"pymssql._mssql.MSSQLConnection.format_and_run_query"},{"filename":"/opt/airflow/src/pymssql/_mssql.pyx","lineno":1855,"name":"pymssql._mssql.check_cancel_and_raise"},{"filename":"/opt/airflow/src/pymssql/_mssql.pyx","lineno":1901,"name":"pymssql._mssql.raise_MSSQLDatabaseException"}]}]}
