{"timestamp":"2025-06-18T13:01:42.938024","level":"info","event":"DAG bundles loaded: dags-folder","logger":"airflow.dag_processing.bundles.manager.DagBundlesManager"}
{"timestamp":"2025-06-18T13:01:42.938707","level":"info","event":"Filling up the DagBag from /opt/airflow/dags/transformData.py","logger":"airflow.models.dagbag.DagBag"}
{"timestamp":"2025-06-18T13:01:43.009519Z","level":"info","event":"ðŸš« File not found: 2025-06-18 13:01:42.976813","chan":"stdout","logger":"task"}
{"timestamp":"2025-06-18T13:01:43.308869","level":"info","event":"Secrets backends loaded for worker","count":1,"backend_classes":["EnvironmentVariablesBackend"],"logger":"supervisor"}
{"timestamp":"2025-06-18T13:01:43.316752","level":"info","event":"Connection Retrieved 'sqlserver'","logger":"airflow.hooks.base"}
{"timestamp":"2025-06-18T13:01:43.341966","level":"warning","event":"/home/airflow/.local/lib/python3.12/site-packages/airflow/providers/common/sql/hooks/sql.py:462: UserWarning: pandas only supports SQLAlchemy connectable (engine/connection) or database string URI or sqlite3 DBAPI2 connection. Other DBAPI2 objects are not tested. Please consider using SQLAlchemy.\n  return psql.read_sql(sql, con=conn, params=parameters, **kwargs)\n","logger":"py.warnings"}
{"timestamp":"2025-06-18T13:01:43.352346","level":"error","event":"Task failed with exception","logger":"task","error_detail":[{"exc_type":"TypeError","exc_value":"cannot serialize 719 (type int)","exc_notes":[],"syntax_error":null,"is_cause":false,"frames":[{"filename":"/home/airflow/.local/lib/python3.12/site-packages/airflow/sdk/execution_time/task_runner.py","lineno":825,"name":"run"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/airflow/sdk/execution_time/task_runner.py","lineno":1088,"name":"_execute_task"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/airflow/sdk/bases/operator.py","lineno":408,"name":"wrapper"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/airflow/providers/standard/operators/python.py","lineno":212,"name":"execute"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/airflow/providers/standard/operators/python.py","lineno":235,"name":"execute_callable"},{"filename":"/home/airflow/.local/lib/python3.12/site-packages/airflow/sdk/execution_time/callback_runner.py","lineno":81,"name":"run"},{"filename":"/opt/airflow/dags/transformData.py","lineno":220,"name":"create_xml"},{"filename":"/usr/local/lib/python3.12/xml/etree/ElementTree.py","lineno":729,"name":"write"},{"filename":"/usr/local/lib/python3.12/xml/etree/ElementTree.py","lineno":892,"name":"_serialize_xml"},{"filename":"/usr/local/lib/python3.12/xml/etree/ElementTree.py","lineno":892,"name":"_serialize_xml"},{"filename":"/usr/local/lib/python3.12/xml/etree/ElementTree.py","lineno":892,"name":"_serialize_xml"},{"filename":"/usr/local/lib/python3.12/xml/etree/ElementTree.py","lineno":885,"name":"_serialize_xml"},{"filename":"/usr/local/lib/python3.12/xml/etree/ElementTree.py","lineno":1050,"name":"_escape_attrib"},{"filename":"/usr/local/lib/python3.12/xml/etree/ElementTree.py","lineno":1004,"name":"_raise_serialization_error"}]},{"exc_type":"AttributeError","exc_value":"'str' object has no attribute 'write'","exc_notes":[],"syntax_error":null,"is_cause":false,"frames":[{"filename":"/usr/local/lib/python3.12/xml/etree/ElementTree.py","lineno":743,"name":"_get_writer"}]}]}
